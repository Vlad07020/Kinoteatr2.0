
Процедура ОтправкаПисьма(ТипОтправки, СтруктураПараметров) Экспорт
	
	//Создаем сообщение
	Письмо = Новый ИнтернетПочтовоеСообщение;
	
	Тело = "<HTML><HEAD></HEAD><BODY>" + Символы.ПС;
	Тело = Тело + "<META HTTP-EQUIV=""Content-Type"" CONTENT=""text/html; charset=UTF-8"">" + Символы.ПС;	
	
	Если ТипОтправки = Перечисления.ВидыОпераций.БронированиеБилетов Тогда
		
		Письмо.Тема = "Подтверждение бронирования";
		
		Тело = Тело + "<p><strong>Дата сеанса: </strong>" + Формат(СтруктураПараметров.ДатаСеанса, "ДФ=dd.MM.yyyy") + "</p>";
		Тело = Тело + "<p><strong>Время сеанса: </strong>" + Формат(Дата(СтруктураПараметров.ВремяСеанса), "ДФ=ЧЧ:мм") + "</p>";
		Тело = Тело + "<p><strong>Кинотеатр: </strong>" + СтруктураПараметров.Кинотеатр + "</p>";
		Тело = Тело + "<p><strong>Кинозал: </strong>" + СтруктураПараметров.Кинозал + "</p>";
		Тело = Тело + "<p><strong>Фильм: </strong>" + СтруктураПараметров.Фильм + "</p>";
		Тело = Тело + "<p><strong>Сумма: </strong>" + СтруктураПараметров.СуммаБилетов + "</p>";
		
		Тело = Тело + "<p style=""text-align: center;""><strong>БИЛЕТЫ</strong></p>";
		
		Для н = 1 По СтруктураПараметров.МассивВыбранныхМест.Количество() Цикл
			
			МассивРядМесто = СтрРазделить(СтруктураПараметров.МассивВыбранныхМест[н-1], "|");;
			
			Тело = Тело + "<p><strong>Ряд: </strong>" + МассивРядМесто[0] + "<strong> Место: </strong>" + МассивРядМесто[1] + "</p>";	
			
		КонецЦикла; 
		
		Тело = Тело + "<p style=""text-align: center;""><strong>КОД ПОДТВЕРЖДЕНИЯ</strong></p>";
		Тело = Тело + "<p style=""text-align: center;""><strong>" + СтруктураПараметров.КодБронирования + "</strong></p>";
		
	ИначеЕсли ТипОтправки = Перечисления.ВидыОпераций.ЗаказПродукцииИзБара Тогда
		
		Письмо.Тема = "Подтверждение заказа продукции";
		
		Тело = Тело + "<p><strong>Дата заказа: </strong>" + Формат(СтруктураПараметров.ДатаЗаказа, "ДФ=dd.MM.yyyy") + "</p>";
		Тело = Тело + "<p><strong>Кинотеатр: </strong>" + СтруктураПараметров.Бар + "</p>";
		Тело = Тело + "<p><strong>Сумма: </strong>" + СтруктураПараметров.СуммаЗаказа + " руб." + "</p>";
		
		Тело = Тело + "<p style=""text-align: center;""><strong>ПРОДУКЦИЯ</strong></p>";
		
		Для н = 1 По СтруктураПараметров.МассивВыбраннойПродукции.Количество() Цикл
			
			МассивТовар = СтрРазделить(СтруктураПараметров.МассивВыбраннойПродукции[н-1], "|");;
			
			Тело = Тело + "<p><strong>Продукция: </strong>" + МассивТовар[0] + "<strong> Количество: </strong>" + МассивТовар[1] + " шт." + "<strong> Сумма: </strong>"  + МассивТовар[2] + " руб." + "</p>";	
			
		КонецЦикла; 
		
		Тело = Тело + "<p style=""text-align: center;""><strong>КОД ПОДТВЕРЖДЕНИЯ</strong></p>";
		Тело = Тело + "<p style=""text-align: center;""><strong>" + СтруктураПараметров.КодБронирования + "</strong></p>";
		
		
	КонецЕсли;
	
	Тело = Тело + "</BODY></HTML>";
	
	//Добавляем наш текст в письмо
	Письмо.Тексты.Добавить(Тело, ТипТекстаПочтовогоСообщения.HTML);
	
	//Первым делом нам необходимо создать новый профиль подключения к серверу.
	ПрофильПодключения = Новый ИнтернетПочтовыйПрофиль;
 
	//Так как мы будем отправлять письма, нам будет необходим только SMTP адрес 
	//нашего почтового сервера. Для примера, возьмем Яндекс.
	ПрофильПодключения.АдресСервераSMTP = "smtp.mail.ru";
 
	//Сервер Яндекса требует обязательного SSL шифрования.
	//ПрофильПодключения.ИспользоватьSSLSMTP = Истина;
 
	//Так как мы подключаемся через SSL, указываем порт 465. Если подключение
	//не защищенное, то используем порт 25
	ПрофильПодключения.ПортSMTP = 25;
 
	//Прописываем пользователя от имени которого будет осуществляться подключение 
	//к почтовому серверу и его пароль	
	ПрофильПодключения.ПользовательSMTP = "kinoteatr_pi_18_4@mail.ru";
	ПрофильПодключения.ПарольSMTP = "Xochu50K";
 
	//Создаем объект ИнтернетПочта
	Почта = Новый ИнтернетПочта;
 
	//Пытаемся подключится к серверу используя наши настройки.
	Попытка
		Почта.Подключиться(ПрофильПодключения);
	Исключение
		Сообщить("Не удалось подключиться к серверу smtp.mail.ru");
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
 
	
 
	//Добавляем ту же почту, через которую подключаемся к серверу
	//Для таких серверов, как Яндекс, Мейл, Гугл эти почты должны обязательно совпадать
	//Однако, имея свой почтовый сервер для домена, можно использовать любую другую почту 
	//с вашим доменом для отправки (по крайней мере, у нас так работает).
	Письмо.Отправитель = "kinoteatr_pi_18_4@mail.ru";
	Письмо.ИмяОтправителя = "Кинотеатр";
	
	//Добавляем получателя
	Письмо.Получатели.Добавить(СтруктураПараметров.ПочтовыйАдресПолучателя);
	
	
	
	//Для массовых рассылок можно использовать СлепыеКопии, что бы получатели не видели, 
	//кому еще отправлялось это письмо.
	//Письмо.СлепыеКопии.Добавить("RandomEmail2@yandex.ru");
 
	//Теперь пытаемся отправить письмо
    Попытка
		Почта.Послать(Письмо);
    Исключение
        Сообщить("Не удалось отправить письмо ");
        Сообщить(ОписаниеОшибки());
	КонецПопытки;	
 
	//Обязательно отключаемся от почтового сервера по завершении отправки письма.	
	Почта.Отключиться();
		
КонецПроцедуры
 
Функция ПроверитьАдресЭлектроннойПочты(ЭлектроннаяПочта) Экспорт
	
	Шаблон = ".+@.+\..+"; // регулярное выражение соответствует произвольному e-mail адресу
	
	RegExp = Новый COMОбъект("VBScript.RegExp"); // создаем объект для работы  с регулярными выражениями
	RegExp.MultiLine = Ложь;    // истина — текст многострочный, ложь — одна строка
	RegExp.Global = Истина;     // истина — поиск по всей строке, ложь — до первого совпадения
	RegExp.IgnoreCase = Истина; // истина — игнорировать регистр строки при поиске
	RegExp.Pattern = Шаблон;    // шаблон (регулярное выражение) для проверки  корректности e-mail
	Если Не RegExp.Test(ЭлектроннаяПочта) Тогда		
		Возврат Ложь;		
	Иначе	
		Возврат Истина;	
	КонецЕсли;
		
КонецФункции
 