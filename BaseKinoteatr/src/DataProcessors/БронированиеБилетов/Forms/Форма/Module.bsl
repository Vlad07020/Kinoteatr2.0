
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КодБронирования = ВспомогательныеФункции.ГенерацияСлучайногоСимвола(ТекущаяУниверсальнаяДатаВМиллисекундах());
	ОчиститьТЧБилеты = Истина;
	Элементы.ОтправитьПодтверждениеНаПочту.Доступность = Ложь;
	
	Объект.ДатаСеанса = ТекущаяДата();
	
	СформироватьСписокСеансов();
	
КонецПроцедуры






#Область КомандыФормы

&НаКлиенте
Процедура ОнлайнОплата(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("УникальныйКодЗаказа", КодБронирования);
	
	ОткрытьФорму("ОбщаяФорма.ФормаОнлайнОплаты", СтруктураПараметров,,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПодтверждениеНаПочту(Команда)
	
	ВыполнитьКомандуОтправкиНаПочту();
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьБронирование(Команда)
	
	Если Объект.Билеты.Количество() = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбранно ни одного места!";
		Сообщение.Сообщить(); 
		Возврат;
		
	КонецЕсли; 
	
	ОформитьБронированиеНаСервере();
	
	Если Элементы.ОтправитьПодтверждениеНаПочту.Доступность Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОбОтправкеДанныхСеансаНаПочту", ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение, "Отправить данные о бронировании на почту?",
		РежимДиалогаВопрос.ДаНетОтмена,
		0, // таймаут в секундах
		КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
		"Информации о бронировании" // (необ.) заголовок
		);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОформитьБронированиеНаСервере()
		
	ДанныеСеанса = Кино.ПолучитьДанныеСеанса(Объект.Сеанс, Объект.Кинотеатр, Объект.Фильм);
	
	СчетчикБилетов = 0;
	
	Для Каждого Стр Из Объект.Билеты Цикл 
		
		Если Не ЗначениеЗаполнено(Стр.РядМесто) Тогда
			Продолжить;	
		КонецЕсли; 
		
		МассивРядМесто = СтрРазделить(Стр.РядМесто, "|");
		
		НоваяЗапись = РегистрыСведений.ПроданныеБилеты.СоздатьМенеджерЗаписи(); 
		
		НоваяЗапись.Бронирование = Истина; 
		НоваяЗапись.Время = ВремяСеанса; 
		НоваяЗапись.День = Объект.ДатаСеанса;
		НоваяЗапись.Период = Объект.ДатаСеанса;
		НоваяЗапись.Зал = Кинозал;
		НоваяЗапись.Кинотеатр = ДанныеСеанса.Кинотеатр;
		НоваяЗапись.Место = МассивРядМесто[1];
		НоваяЗапись.Ряд = МассивРядМесто[0];
		НоваяЗапись.Фильм = ДанныеСеанса.Фильм;
		НоваяЗапись.Цена = Стр.Цена;
		НоваяЗапись.КодПодтверждения = КодБронирования;
		
		Попытка
			НоваяЗапись.Записать();	
		Исключение
		    Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не удалось записать данные по причине: " + ОписаниеОшибки();
			Сообщение.Сообщить(); 
		КонецПопытки; 
		
		СчетчикБилетов = СчетчикБилетов + 1;
		
	КонецЦикла; 
	
	// Оставляем для ТЧ Билетов и кнопки забронировать только просмотр
	
	Если СчетчикБилетов <> 0 Тогда
		
		Элементы.Билеты.ТолькоПросмотр = Истина;  
		Элементы.ОформитьБронирование.Доступность = Ложь;
		Элементы.ОтправитьПодтверждениеНаПочту.Доступность = Истина;    
		
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбранно ни одного места или выбранные места пустые!";
		Сообщение.Сообщить();	
		
	КонецЕсли; 
	
	
	
КонецПроцедуры

#КонецОбласти 



#Область ОбработкаСобытийЭлементов

&НаКлиенте
Процедура ДатаСеансаПриИзменении(Элемент)
	
	Если Объект.ДатаСеанса < НачалоДня(ТекущаяДата()) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Дата сеанса не может быть меньше текущей даты!";
		Сообщение.Сообщить(); 
		
		Объект.ДатаСеанса = ТекущаяДата();
			
	КонецЕсли; 
	
	СформироватьСписокСеансов();
	
КонецПроцедуры

&НаКлиенте
Процедура КинотеатрПриИзменении(Элемент)
	СформироватьСписокСеансов();
КонецПроцедуры

&НаКлиенте
Процедура ФильмПриИзменении(Элемент)
	СформироватьСписокСеансов();
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПриИзменении(Элемент)
	
	Если Не ПочтовыеРассылки.ПроверитьАдресЭлектроннойПочты(ПочтаДляПодтвержденияБронирования) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Неверный адрес почты!" + Символы.ПС + "Сообщение не будет доставлено!";
		Сообщение.Сообщить(); 
				
	КонецЕсли;
	
КонецПроцедуры 
 
&НаКлиенте
Процедура БилетыРядМестоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.Сеанс) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбран сеанс!";
		Сообщение.Сообщить(); 
		
		Возврат;
		
	КонецЕсли; 
	
	ДанныеСеанса = Кино.ПолучитьДанныеСеанса(Объект.Сеанс, Объект.Кинотеатр, Объект.Фильм);
	МассивВыбранныхМест = Новый Массив;
	
	Если ДанныеСеанса.СформированаСтруктура Тогда
		
		Если Объект.Билеты.Количество() > 0 Тогда
			
			Для каждого Стр Из Объект.Билеты Цикл
				
				Если ЗначениеЗаполнено(Стр.РядМесто) Тогда
					МассивВыбранныхМест.Добавить(Стр.РядМесто);	
				КонецЕсли; 
					
			КонецЦикла;
						
		КонецЕсли; 
		
		ВремяСеанса = Дата(ДанныеСеанса.ВремяСеанса);
		Кинозал = ДанныеСеанса.Кинозал;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Кинотеатр", ДанныеСеанса.Кинотеатр);
		СтруктураПараметров.Вставить("Зал", Кинозал);
		СтруктураПараметров.Вставить("Фильм", ДанныеСеанса.Фильм);
		СтруктураПараметров.Вставить("ДатаСеанса", Объект.ДатаСеанса);
		СтруктураПараметров.Вставить("ВремяСеанса", ВремяСеанса);
		СтруктураПараметров.Вставить("ВыбранныеМеста", МассивВыбранныхМест);
		СтруктураПараметров.Вставить("СуммаБилетов", ОбщаяСтоимостьБилетов);
		
		СтоимостьСеанса = ДанныеСеанса.Стоимость;
		
		ОповещениеОЗавершенииВыбораМеста = Новый ОписаниеОповещения("ОткрытьПараметрыЗавершениеВыбораМеста", ЭтотОбъект);
		РезультатВыбора = ОткрытьФорму("ОбщаяФорма.ФормаВыбораМест", СтруктураПараметров,,,,, ОповещениеОЗавершенииВыбораМеста, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
				
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "К сожалению, выбор места в данный момент недоступен!";
		Сообщение.Сообщить(); 
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 






#Область ВспомогательныеФункции

&НаСервере
Процедура СформироватьСписокСеансов()
	
	Элементы.Сеанс.СписокВыбора.Очистить();
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	РасписаниеСеансов.Период КАК Период,
		|	РасписаниеСеансов.ВремяСеанса КАК ВремяСеанса,
		|	РасписаниеСеансов.Зал КАК Зал,
		|	РасписаниеСеансов.Кинотеатр КАК Кинотеатр,
		|	РасписаниеСеансов.Фильм КАК Фильм,
		|	РасписаниеСеансов.Стоимость КАК Стоимость
		|ИЗ
		|	РегистрСведений.РасписаниеСеансов КАК РасписаниеСеансов";
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	ЗапросВыбора = СхемаЗапроса.ПакетЗапросов[0];
	ОператорВыбора = ЗапросВыбора.Операторы[0];
	
	Если ЗначениеЗаполнено(Объект.ДатаСеанса) Тогда
		ОператорВыбора.Отбор.Добавить("РасписаниеСеансов.Период = &Период");
		Запрос.УстановитьПараметр("Период", Объект.ДатаСеанса);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Кинотеатр) Тогда
		ОператорВыбора.Отбор.Добавить("РасписаниеСеансов.Кинотеатр = &Кинотеатр");
		Запрос.УстановитьПараметр("Кинотеатр", Объект.Кинотеатр);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Фильм) Тогда
		ОператорВыбора.Отбор.Добавить("РасписаниеСеансов.Фильм = &Фильм");
		Запрос.УстановитьПараметр("Фильм", Объект.Фильм);
	КонецЕсли;
	
	ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗначениеСеанса = "";
		ПредставлениеСеанса = "";
		
		ЗначениеСеанса = Строка(Выборка.Стоимость) + "|" + Строка(Выборка.Кинотеатр) + "|" + Строка(Выборка.Зал) + "|" + Строка(Выборка.Фильм) + "|" + Формат(Строка(Выборка.Период), "ДФ=dd.MM.yyyy") + "|" + Формат(Строка(Выборка.ВремяСеанса), "ДЛФ=T");
		
		Если Не ЗначениеЗаполнено(Объект.Кинотеатр) Тогда
						
			ПредставлениеСеанса = ПредставлениеСеанса + Строка(Выборка.Кинотеатр) + " | ";
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.Фильм) Тогда
			
			ПредставлениеСеанса = ПредставлениеСеанса + Строка(Выборка.Фильм) + " | ";
			
		КонецЕсли;
		 
		ПредставлениеСеанса = ПредставлениеСеанса + Формат(Выборка.ВремяСеанса, "ДЛФ=T") + " | " + Выборка.Зал;
			
		//ЗначениеСеанса = Строка(Выборка.Стоимость) + "|" + Строка(Выборка.Кинотеатр) + "|" + Строка(Выборка.Зал) + "|" + Строка(Выборка.Фильм) + "|" + Формат(Строка(Выборка.Период), "ДФ=dd.MM.yyyy") + "|" + Формат(Строка(Выборка.ВремяСеанса), "ДЛФ=T");
		//ПредставлениеСеанса = Строка(Выборка.Кинотеатр) + " " + Строка(Выборка.Зал) + " " + Строка(Выборка.Фильм) + " " + Формат(Выборка.Период, "ДФ=dd.MM.yyyy") + " " + Формат(Выборка.ВремяСеанса, "ДЛФ=T");
		
		Элементы.Сеанс.СписокВыбора.Добавить(ЗначениеСеанса, ПредставлениеСеанса);
			
	КонецЦикла; 
	
КонецПроцедуры
 
&НаКлиенте
Процедура ОткрытьПараметрыЗавершениеВыбораМеста(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		
		Для н = 1 По Результат.Количество() Цикл
			
			Если н = 1 Тогда
				
				Текущаястрока = Элементы.Билеты.ТекущиеДанные;
				ТекущаяСтрока.РядМесто = Результат[н-1];
				ТекущаяСтрока.Цена = СтоимостьСеанса;
			Иначе
				
				Текущаястрока = Объект.Билеты.Добавить();
				ТекущаяСтрока.РядМесто = Результат[н-1];
				ТекущаяСтрока.Цена = СтоимостьСеанса;
				
			КонецЕсли; 
			
		КонецЦикла;
		
		ОбщаяСтоимостьБилетов = Объект.Билеты.Итог("Цена");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпроситьОбОчисткеТЧБилетов()
	
	Если Объект.Билеты.Количество() > 0 Тогда
		
		ОповещениеОбОчисткеТабличнойЧасти = Новый ОписаниеОповещения("ОчиститьТабличнуюЧасть", ЭтотОбъект);
		ТекстВопроса = "Табличная часть с билетами будет очищена. Продолжить?";
		ПоказатьВопрос(ОповещениеОбОчисткеТабличнойЧасти, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
	КонецЕсли;
		
КонецПроцедуры
 
&НаКлиенте
Функция ОчиститьТабличнуюЧасть(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Объект.Билеты.Очистить();
		ОчиститьТЧБилеты = Истина;
		
	Иначе
		
		ОчиститьТЧБилеты = Ложь;
		
	КонецЕсли;
 
КонецФункции

&НаКлиенте
Процедура СеансПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаОбОтправкеДанныхСеансаНаПочту(Результат, Параметры) Экспорт
 
    Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если Не ЗначениеЗаполнено(ПочтаДляПодтвержденияБронирования) Тогда
			
			Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначенияПочты", 
			ЭтотОбъект);	
			
			ПоказатьВводЗначения(
			Оповещение,
			, // пропускаем начальное значение
			"Введите почту для отправки данных о сеансе",
			"Строка"
			);
			
		Иначе
			ВыполнитьКомандуОтправкиНаПочту();	
		КонецЕсли; 
			
	КонецЕсли;	
 
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКомандуОтправкиНаПочту()
	
	Если Не ЗначениеЗаполнено(ПочтаДляПодтвержденияБронирования) Тогда
		
		ПоказатьПредупреждение(, "Не заполнен почтовый адрес!", , "Подтверждение бронирования ");
		Возврат;
		
	КонецЕсли;
	
	Если Не ПочтовыеРассылки.ПроверитьАдресЭлектроннойПочты(ПочтаДляПодтвержденияБронирования) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Неверный адрес почты!" + Символы.ПС + "Сообщение не будет доставлено!";
		Сообщение.Сообщить(); 
		
		Возврат;
		
	КонецЕсли; 
	
	МассивВыбранныхМест = Новый Массив;
	
	Если Объект.Билеты.Количество() > 0 Тогда
		
		Для каждого Стр Из Объект.Билеты Цикл
			
			Если ЗначениеЗаполнено(Стр.РядМесто) Тогда
				МассивВыбранныхМест.Добавить(Стр.РядМесто);	
			КонецЕсли; 
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если МассивВыбранныхМест.Количество() = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбрано ни одного места!";
		Сообщение.Сообщить(); 
		
		Возврат;
		
	КонецЕсли; 
	
	ДанныеСеанса = Кино.ПолучитьДанныеСеанса(Объект.Сеанс, Объект.Кинотеатр, Объект.Фильм);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ПочтовыйАдресПолучателя", ПочтаДляПодтвержденияБронирования);
	СтруктураПараметров.Вставить("КодБронирования", КодБронирования);
	СтруктураПараметров.Вставить("ДатаСеанса", Объект.ДатаСеанса);
	СтруктураПараметров.Вставить("ВремяСеанса", ДанныеСеанса.ВремяСеанса);
	СтруктураПараметров.Вставить("Кинотеатр", ДанныеСеанса.Кинотеатр);
	СтруктураПараметров.Вставить("Кинозал", ДанныеСеанса.Кинозал);
	СтруктураПараметров.Вставить("Фильм", ДанныеСеанса.Фильм);
	СтруктураПараметров.Вставить("МассивВыбранныхМест", МассивВыбранныхМест);
	СтруктураПараметров.Вставить("СуммаБилетов", ОбщаяСтоимостьБилетов);
	
	ПочтовыеРассылки.ОтправкаПисьма(ПредопределенноеЗначение("Перечисление.ВидыОпераций.БронированиеБилетов"), СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЗначенияПочты(Результат, Параметры) Экспорт	
 
    Если Не Результат = Неопределено Тогда
		
		ПочтаДляПодтвержденияБронирования = Результат;
		
		Если ПочтовыеРассылки.ПроверитьАдресЭлектроннойПочты(Результат) Тогда
			ВыполнитьКомандуОтправкиНаПочту();	
		Иначе	
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Проверьте корректность ввода почты!";
			Сообщение.Сообщить(); 	
		КонецЕсли; 
		
    КонецЕсли;
	
КонецПроцедуры
 

#КонецОбласти 