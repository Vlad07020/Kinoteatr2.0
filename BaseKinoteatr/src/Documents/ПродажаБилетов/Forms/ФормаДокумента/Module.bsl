
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.УникальныйКодПродажи = ВспомогательныеФункции.ГенерацияСлучайногоСимвола(ТекущаяУниверсальнаяДатаВМиллисекундах());
		Объект.ЭтоБронирование = Ложь;
		Объект.ДатаСеанса = ТекущаяДата();
	КонецЕсли; 
		
	СформироватьСписокСеансов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаСеансаПриИзменении(Элемент)
	
	Если Объект.ДатаСеанса < НачалоДня(ТекущаяДата()) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Нельзя продать билет на прошедшую дату!";
		Сообщение.Сообщить(); 
		
		Объект.ДатаСеанса = ТекущаяДата();
		
		Возврат;
		
	КонецЕсли;
	
	СформироватьСписокСеансов();
	
КонецПроцедуры

&НаКлиенте
Процедура КинотеатрПриИзменении(Элемент)
	СформироватьСписокСеансов();
КонецПроцедуры

&НаКлиенте
Процедура ФильмПриИзменении(Элемент)
	СформироватьСписокСеансов();
КонецПроцедуры

&НаКлиенте
Процедура БилетыРядМестоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.Сеанс) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбран сеанс!";
		Сообщение.Сообщить(); 
		
		Возврат;
		
	КонецЕсли; 
	
	ДанныеСеанса = Кино.ПолучитьДанныеСеанса(Объект.Сеанс, Объект.Кинотеатр, Объект.Фильм);
	МассивВыбранныхМест = Новый Массив;
	
	Если ДанныеСеанса.СформированаСтруктура Тогда
		
		Если Объект.Билеты.Количество() > 0 Тогда
			
			Для каждого Стр Из Объект.Билеты Цикл
				
				Если ЗначениеЗаполнено(Стр.РядМесто) Тогда
					МассивВыбранныхМест.Добавить(Стр.РядМесто);	
				КонецЕсли; 
				
			КонецЦикла;
			
		КонецЕсли; 
		
		ВремяСеанса = Дата(ДанныеСеанса.ВремяСеанса);
		Кинозал = ДанныеСеанса.Кинозал;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Кинотеатр", ДанныеСеанса.Кинотеатр);
		СтруктураПараметров.Вставить("Зал", Кинозал);
		СтруктураПараметров.Вставить("Фильм", ДанныеСеанса.Фильм);
		СтруктураПараметров.Вставить("ДатаСеанса", Объект.ДатаСеанса);
		СтруктураПараметров.Вставить("ВремяСеанса", ВремяСеанса);
		СтруктураПараметров.Вставить("ВыбранныеМеста", МассивВыбранныхМест);
		СтруктураПараметров.Вставить("СуммаБилетов", ОбщаяСтоимостьБилетов);
		
		СтоимостьСеанса = ДанныеСеанса.Стоимость;
		
		ОповещениеОЗавершенииВыбораМеста = Новый ОписаниеОповещения("ОткрытьПараметрыЗавершениеВыбораМеста", ЭтотОбъект);
		РезультатВыбора = ОткрытьФорму("ОбщаяФорма.ФормаВыбораМест", СтруктураПараметров,,,,, ОповещениеОЗавершенииВыбораМеста, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "К сожалению, выбор места в данный момент недоступен!";
		Сообщение.Сообщить(); 
		
	КонецЕсли;
	
КонецПроцедуры










#Область КомандыФормы

&НаСервере
Процедура ЗаполнитьПоКодуБронированияНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроданныеБилеты.Кинотеатр КАК Кинотеатр,
		|	ПроданныеБилеты.Зал КАК Зал,
		|	ПроданныеБилеты.Фильм КАК Фильм,
		|	ПроданныеБилеты.День КАК День,
		|	ПроданныеБилеты.Время КАК Время,
		|	ПроданныеБилеты.Ряд КАК Ряд,
		|	ПроданныеБилеты.Место КАК Место,
		|	ПроданныеБилеты.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ПроданныеБилеты КАК ПроданныеБилеты
		|ГДЕ
		|	ПроданныеБилеты.КодПодтверждения = &КодПодтверждения
		|	И ПроданныеБилеты.День = &День";
	
	Запрос.УстановитьПараметр("День", Объект.ДатаСеанса);
	Запрос.УстановитьПараметр("КодПодтверждения", Объект.КодБронирования);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		тСтоимостьБилета = 0;
		тКинотеатр = "";
		тЗал = "";
		тФильм = "";
		тВремя = "";
		ЗначениеСеанса = "";
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НовСтр = Объект.Билеты.Добавить();
			
			НовСтр.РядМесто = Строка(Выборка.Ряд) + "|" + Строка(Выборка.Место);
			НовСтр.Цена = Выборка.Цена;
			
			тСтоимостьБилета = Выборка.Цена;
			тКинотеатр = Выборка.Кинотеатр;
			тЗал = Выборка.Зал;
			тФильм = Выборка.Фильм;
			тВремя= Выборка.Время;
		КонецЦикла;
				
		ЗначениеСеанса = Строка(тСтоимостьБилета) + "|" + Строка(тКинотеатр) + "|" + Строка(тЗал) + "|" + Строка(тФильм) + "|" + Формат(Строка(тВремя), "ДФ=dd.MM.yyyy") + "|" + Формат(Строка(тВремя), "ДЛФ=T");
		
		Объект.Кинотеатр = Выборка.Кинотеатр;
		Объект.Фильм = Выборка.Фильм;
		Объект.ВремяСеанса = Выборка.Время;
		Объект.Кинозал = Выборка.Зал;
		Объект.СеансБронирования = ЗначениеСеанса;
		
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "На выбранную дату нет заказов с таким кодом бронирования!";
		Сообщение.Сообщить(); 
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКодуБронирования(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.КодБронирования) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен код бронирования!";
		Сообщение.Сообщить(); 
		
		Возврат;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаСеанса) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнена дата сеанса!";
		Сообщение.Сообщить(); 
		
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьПоКодуБронированияНаСервере();
	
	Объект.ЭтоБронирование = Истина;
	
	Элементы.Билеты.Доступность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБилетов(Команда)
		//если документ не записан или изменен, выводим пользователю сообщение и не выводим билет на печать
	Если Модифицированность Тогда
		Сообщить("Запишите документ!");
	Иначе
		//создаем новый табличный документ
    	ТабДок = Новый ТабличныйДокумент;
		//обходим циклом табличную часть Продажа
		Для Каждого Элем Из Объект.Билеты Цикл
			//вызываем универсальную процедуру печати билета, передаем параметры:
			//текущую строку и табличный документ для вывода билета
			СтруктураПечати = Новый Структура;
			СтруктураПечати.Вставить("Кинотеатр", Объект.Кинотеатр);
			СтруктураПечати.Вставить("Зал", Объект.Кинозал);
			СтруктураПечати.Вставить("Фильм", Объект.Фильм);
			СтруктураПечати.Вставить("Время", Объект.ВремяСеанса);
			СтруктураПечати.Вставить("День", Объект.ДатаСеанса);
			СтруктураПечати.Вставить("Место", Элем.РядМесто);
			СтруктураПечати.Вставить("Цена", Элем.Цена);
			ПечатьБилета(СтруктураПечати, ТабДок);
		КонецЦикла;
		ТабДок.Показать();
	КонецЕсли;      

КонецПроцедуры

&НаСервере
Процедура ПечатьБилета(Стр, ТабДок)
	Документы.ПродажаБилетов.ПечатьБилета(Стр, ТабДок, Объект.Сеанс);
КонецПроцедуры

&НаКлиенте
Процедура ОнлайнОплата(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("УникальныйКодЗаказа", Объект.УникальныйКодПродажи);
	
	ОткрытьФорму("ОбщаяФорма.ФормаОнлайнОплаты", СтруктураПараметров,,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

#КонецОбласти 


#Область ВспомогательныеФункции

&НаСервере
Процедура СформироватьСписокСеансов()
	
	Элементы.Сеанс.СписокВыбора.Очистить();
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	РасписаниеСеансов.Период КАК Период,
		|	РасписаниеСеансов.ВремяСеанса КАК ВремяСеанса,
		|	РасписаниеСеансов.Зал КАК Зал,
		|	РасписаниеСеансов.Кинотеатр КАК Кинотеатр,
		|	РасписаниеСеансов.Фильм КАК Фильм,
		|	РасписаниеСеансов.Стоимость КАК Стоимость
		|ИЗ
		|	РегистрСведений.РасписаниеСеансов КАК РасписаниеСеансов";
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	ЗапросВыбора = СхемаЗапроса.ПакетЗапросов[0];
	ОператорВыбора = ЗапросВыбора.Операторы[0];
	
	Если ЗначениеЗаполнено(Объект.ДатаСеанса) Тогда
		ОператорВыбора.Отбор.Добавить("РасписаниеСеансов.Период = &Период");
		Запрос.УстановитьПараметр("Период", Объект.ДатаСеанса);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Кинотеатр) Тогда
		ОператорВыбора.Отбор.Добавить("РасписаниеСеансов.Кинотеатр = &Кинотеатр");
		Запрос.УстановитьПараметр("Кинотеатр", Объект.Кинотеатр);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Фильм) Тогда
		ОператорВыбора.Отбор.Добавить("РасписаниеСеансов.Фильм = &Фильм");
		Запрос.УстановитьПараметр("Фильм", Объект.Фильм);
	КонецЕсли;
	
	ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗначениеСеанса = "";
		ПредставлениеСеанса = "";
		
		ЗначениеСеанса = Строка(Выборка.Стоимость) + "|" + Строка(Выборка.Кинотеатр) + "|" + Строка(Выборка.Зал) + "|" + Строка(Выборка.Фильм) + "|" + Формат(Строка(Выборка.Период), "ДФ=dd.MM.yyyy") + "|" + Формат(Строка(Выборка.ВремяСеанса), "ДЛФ=T");
		
		Если Не ЗначениеЗаполнено(Объект.Кинотеатр) Тогда
						
			ПредставлениеСеанса = ПредставлениеСеанса + Строка(Выборка.Кинотеатр) + " | ";
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.Фильм) Тогда
			
			ПредставлениеСеанса = ПредставлениеСеанса + Строка(Выборка.Фильм) + " | ";
			
		КонецЕсли;
		 
		ПредставлениеСеанса = ПредставлениеСеанса + Формат(Выборка.ВремяСеанса, "ДЛФ=T") + " | " + Выборка.Зал;
		
		Элементы.Сеанс.СписокВыбора.Добавить(ЗначениеСеанса, ПредставлениеСеанса);
			
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПараметрыЗавершениеВыбораМеста(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		
		Для н = 1 По Результат.Количество() Цикл
			
			Если н = 1 Тогда
				
				Текущаястрока = Элементы.Билеты.ТекущиеДанные;
				ТекущаяСтрока.РядМесто = Результат[н-1];
				ТекущаяСтрока.Цена = СтоимостьСеанса;
			Иначе
				
				Текущаястрока = Объект.Билеты.Добавить();
				ТекущаяСтрока.РядМесто = Результат[н-1];
				ТекущаяСтрока.Цена = СтоимостьСеанса;
				
			КонецЕсли; 
			
		КонецЦикла;
		
		ОбщаяСтоимостьБилетов = Объект.Билеты.Итог("Цена");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнструкцияПоПродажам(Команда)
	ОткрытьФорму("Документ.ПродажаБилетов.Форма.ИнструкцияПоПродажам",,,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

#КонецОбласти 
